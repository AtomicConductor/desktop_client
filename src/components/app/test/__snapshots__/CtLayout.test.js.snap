// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CtLayout />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className="makeStyles-root-1"
        >
          <CssBaseline />
          <UNDEFINED />
          <Switch>
            <Route
              path="/dashboard"
              render={[Function]}
            />
            <Route
              path="/downloader"
              render={[Function]}
            />
            <Route
              path="/uploader"
              render={[Function]}
            />
            <Route
              path="/plugins"
              render={[Function]}
            />
            <Route
              path="/settings"
              render={[Function]}
            />
            <Route
              path="/account"
              render={[Function]}
            />
            <Redirect
              push={true}
              to="/dashboard"
            />
          </Switch>
        </div>,
        <UNDEFINED />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CssBaseline />,
            <UNDEFINED />,
            <Switch>
              <Route
                path="/dashboard"
                render={[Function]}
              />
              <Route
                path="/downloader"
                render={[Function]}
              />
              <Route
                path="/uploader"
                render={[Function]}
              />
              <Route
                path="/plugins"
                render={[Function]}
              />
              <Route
                path="/settings"
                render={[Function]}
              />
              <Route
                path="/account"
                render={[Function]}
              />
              <Redirect
                push={true}
                to="/dashboard"
              />
            </Switch>,
          ],
          "className": "makeStyles-root-1",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(CtDrawer)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  path="/dashboard"
                  render={[Function]}
                />,
                <Route
                  path="/downloader"
                  render={[Function]}
                />,
                <Route
                  path="/uploader"
                  render={[Function]}
                />,
                <Route
                  path="/plugins"
                  render={[Function]}
                />,
                <Route
                  path="/settings"
                  render={[Function]}
                />,
                <Route
                  path="/account"
                  render={[Function]}
                />,
                <Redirect
                  push={true}
                  to="/dashboard"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/dashboard",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/downloader",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/uploader",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/plugins",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/settings",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/account",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "push": true,
                  "to": "/dashboard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(CtSnackbar)",
          "type": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="makeStyles-root-1"
          >
            <CssBaseline />
            <UNDEFINED />
            <Switch>
              <Route
                path="/dashboard"
                render={[Function]}
              />
              <Route
                path="/downloader"
                render={[Function]}
              />
              <Route
                path="/uploader"
                render={[Function]}
              />
              <Route
                path="/plugins"
                render={[Function]}
              />
              <Route
                path="/settings"
                render={[Function]}
              />
              <Route
                path="/account"
                render={[Function]}
              />
              <Redirect
                push={true}
                to="/dashboard"
              />
            </Switch>
          </div>,
          <UNDEFINED />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CssBaseline />,
              <UNDEFINED />,
              <Switch>
                <Route
                  path="/dashboard"
                  render={[Function]}
                />
                <Route
                  path="/downloader"
                  render={[Function]}
                />
                <Route
                  path="/uploader"
                  render={[Function]}
                />
                <Route
                  path="/plugins"
                  render={[Function]}
                />
                <Route
                  path="/settings"
                  render={[Function]}
                />
                <Route
                  path="/account"
                  render={[Function]}
                />
                <Redirect
                  push={true}
                  to="/dashboard"
                />
              </Switch>,
            ],
            "className": "makeStyles-root-1",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(CtDrawer)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    path="/dashboard"
                    render={[Function]}
                  />,
                  <Route
                    path="/downloader"
                    render={[Function]}
                  />,
                  <Route
                    path="/uploader"
                    render={[Function]}
                  />,
                  <Route
                    path="/plugins"
                    render={[Function]}
                  />,
                  <Route
                    path="/settings"
                    render={[Function]}
                  />,
                  <Route
                    path="/account"
                    render={[Function]}
                  />,
                  <Redirect
                    push={true}
                    to="/dashboard"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/dashboard",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/downloader",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/uploader",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/plugins",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/settings",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/account",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "push": true,
                    "to": "/dashboard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(CtSnackbar)",
            "type": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`snapshots match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CtLayout />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <div
          className="makeStyles-root-1"
        >
          <CssBaseline />
          <UNDEFINED />
          <Switch>
            <Route
              path="/dashboard"
              render={[Function]}
            />
            <Route
              path="/downloader"
              render={[Function]}
            />
            <Route
              path="/uploader"
              render={[Function]}
            />
            <Route
              path="/plugins"
              render={[Function]}
            />
            <Route
              path="/settings"
              render={[Function]}
            />
            <Route
              path="/account"
              render={[Function]}
            />
            <Redirect
              push={true}
              to="/dashboard"
            />
          </Switch>
        </div>,
        <UNDEFINED />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CssBaseline />,
            <UNDEFINED />,
            <Switch>
              <Route
                path="/dashboard"
                render={[Function]}
              />
              <Route
                path="/downloader"
                render={[Function]}
              />
              <Route
                path="/uploader"
                render={[Function]}
              />
              <Route
                path="/plugins"
                render={[Function]}
              />
              <Route
                path="/settings"
                render={[Function]}
              />
              <Route
                path="/account"
                render={[Function]}
              />
              <Redirect
                push={true}
                to="/dashboard"
              />
            </Switch>,
          ],
          "className": "makeStyles-root-1",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.memo),
              "WrappedComponent": [Function],
              "compare": null,
              "displayName": "Connect(CtDrawer)",
              "type": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  path="/dashboard"
                  render={[Function]}
                />,
                <Route
                  path="/downloader"
                  render={[Function]}
                />,
                <Route
                  path="/uploader"
                  render={[Function]}
                />,
                <Route
                  path="/plugins"
                  render={[Function]}
                />,
                <Route
                  path="/settings"
                  render={[Function]}
                />,
                <Route
                  path="/account"
                  render={[Function]}
                />,
                <Redirect
                  push={true}
                  to="/dashboard"
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/dashboard",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/downloader",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/uploader",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/plugins",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/settings",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "path": "/account",
                  "render": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "push": true,
                  "to": "/dashboard",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": Object {
          "$$typeof": Symbol(react.memo),
          "WrappedComponent": [Function],
          "compare": null,
          "displayName": "Connect(CtSnackbar)",
          "type": [Function],
          Symbol(Symbol.hasInstance): [Function],
        },
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div
            className="makeStyles-root-1"
          >
            <CssBaseline />
            <UNDEFINED />
            <Switch>
              <Route
                path="/dashboard"
                render={[Function]}
              />
              <Route
                path="/downloader"
                render={[Function]}
              />
              <Route
                path="/uploader"
                render={[Function]}
              />
              <Route
                path="/plugins"
                render={[Function]}
              />
              <Route
                path="/settings"
                render={[Function]}
              />
              <Route
                path="/account"
                render={[Function]}
              />
              <Redirect
                push={true}
                to="/dashboard"
              />
            </Switch>
          </div>,
          <UNDEFINED />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CssBaseline />,
              <UNDEFINED />,
              <Switch>
                <Route
                  path="/dashboard"
                  render={[Function]}
                />
                <Route
                  path="/downloader"
                  render={[Function]}
                />
                <Route
                  path="/uploader"
                  render={[Function]}
                />
                <Route
                  path="/plugins"
                  render={[Function]}
                />
                <Route
                  path="/settings"
                  render={[Function]}
                />
                <Route
                  path="/account"
                  render={[Function]}
                />
                <Redirect
                  push={true}
                  to="/dashboard"
                />
              </Switch>,
            ],
            "className": "makeStyles-root-1",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.memo),
                "WrappedComponent": [Function],
                "compare": null,
                "displayName": "Connect(CtDrawer)",
                "type": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    path="/dashboard"
                    render={[Function]}
                  />,
                  <Route
                    path="/downloader"
                    render={[Function]}
                  />,
                  <Route
                    path="/uploader"
                    render={[Function]}
                  />,
                  <Route
                    path="/plugins"
                    render={[Function]}
                  />,
                  <Route
                    path="/settings"
                    render={[Function]}
                  />,
                  <Route
                    path="/account"
                    render={[Function]}
                  />,
                  <Redirect
                    push={true}
                    to="/dashboard"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/dashboard",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/downloader",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/uploader",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/plugins",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/settings",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "path": "/account",
                    "render": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "push": true,
                    "to": "/dashboard",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.memo),
            "WrappedComponent": [Function],
            "compare": null,
            "displayName": "Connect(CtSnackbar)",
            "type": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;
